{
    "actionName": "Tavily Web Search",
    "iconUrl": "https://media.licdn.com/dms/image/v2/D4D0BAQEBo8xFnt9JVA/company-logo_200_200/company-logo_200_200/0/1727983378239/tavily_logo?e=2147483647&v=beta&t=g5QE2PczK2BZP5DcgKmIQGfEpoRoCKfKFgO7fHJnTxg",
    "overview": "Search real-time data on the web using Tavily",
    "typeAction": "code",
    "geminiApiFunctionSpec": {
        "name": "tavily_web_search",
        "description": "Search the web in real-time using Tavily API",
        "parameters": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query to look up on the web"
                },
                "search_depth": {
                    "type": "integer",
                    "description": "The depth of search, higher values return more results"
                },
                "include_answers": {
                    "type": "boolean",
                    "description": "Whether to include direct answers from sources"
                }
            },
            "required": [
                "query"
            ]
        }
    },
    "actionHandle": {
        "code": {
            "function": "async function tavily_web_search({ params, envi, prev }) {\n  try {\n    const query = params.query;\n    const search_depth = params.search_depth || 3; // Default depth\n    const include_answers = params.include_answers || false; // Default value\n    const apiKey = envi.tavilyApiKey;  //Get API key from envi\n\n    const url = 'https://api.tavily.com/search';\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${apiKey}`\n    };\n\n    const body = JSON.stringify({\n      query: query,\n      search_depth: search_depth,\n      include_answers: include_answers\n    });\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: headers,\n      body: body\n    });\n\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new Error(data.error || 'Tavily API Error');\n    }\n\n    return data;\n\n  } catch (error) {\n    console.error('Tavily Web Search Error:', error);\n    return { error: error.message };\n  }\n}\n"
        }
    },
    "envVariant": {
        "tavilyApiKey": "API KEY"
    }
}
